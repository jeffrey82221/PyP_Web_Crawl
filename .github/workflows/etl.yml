name: ETL
on: 
  schedule:
    - cron: "0 0 * * *"
jobs:
  update_package_names:
    runs-on: ubuntu-latest
    steps:
      - name: checkout 
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: 'main'
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-known-hosts: github.com
      - name: Set Up Python 
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install package
        run: |
          pip install beautifulsoup4==4.12.0
          pip install requests==2.28.2
      - name: Run update script
        run : |
         ls
         python update_package_names.py
      - name: Git Commit 
        run: |
          git config --global user.name "jeffrey82221"
          git config --global user.email "jeffrey82221@gmail.com"
          git add data
          git diff-index --quiet HEAD || git commit -m 'update: package names'
      - name: Git pull
        run: | 
          git config --global user.email "jeffrey82221@gmail.com"
          git config --global user.name "jeffrey82221"
          git config --global http.postBuffer 1048576000
          git config pull.rebase false
          git pull origin main || echo 'pull failed'
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PERSONAL_TOKEN }}
          branch: main
  update_latest_json:
    name: Upload Latest Json(s)
    needs: update_package_names
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        alpha: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
        split_cnt: [15]
    steps:
      - name: checkout 
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: 'main'
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-known-hosts: github.com
      - name: Set Up Python 
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Run install
        run: |
          pip install requests==2.28.2
          pip install tqdm
          pip install cryptography
      - name: Try Delete
        run: git push origin -d update_latest/${{ matrix.alpha }} || echo 'do nothing'
      - name: New Branch
        run: |
          git config --global http.postBuffer 1048576000
          git checkout -b update_latest/${{ matrix.alpha }}
          git push --set-upstream origin update_latest/${{ matrix.alpha }}
      - name: Insert Key
        run: |
          echo ${{ secrets.FILEKEY }} >> filekey.key
      - name: Run update script
        run: python update_latest_all.py ${{ matrix.alpha }} ${{ matrix.split_cnt }}
      - name: Git Commit 
        run: |
          git config --global user.name "jeffrey82221"
          git config --global user.email "jeffrey82221@gmail.com"
          git add data/latest
          git diff-index --quiet HEAD || git commit -m 'update: package latest json'
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PERSONAL_TOKEN }}
          branch: update_latest/${{ matrix.alpha }}
      - name: Create Pull Request
        id: pr_id
        uses: peter-evans/create-pull-request@v5
        with:
          title: "Pulling update_latest/${{ matrix.alpha }} into main"
          token: ${{ secrets.PERSONAL_TOKEN }}
          branch: update_latest/${{ matrix.alpha }}
          base: main
          delete-branch: true
          labels: "automerge"
      - name: Pull Request Automerge 1
        if: steps.pr_id.outputs.pull-request-operation == 'created'
        id: merge1
        continue-on-error: true
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
          pull-request-number: ${{ steps.pr_id.outputs.pull-request-number }}
          merge-method: merge
      - name: Retry 1 - sleep
        if: steps.merge1.outcome == 'failure'
        id: sleep1
        run: sleep 60
      - name: Pull Request Automerge 2
        if: steps.sleep1.outcome == 'success'
        id: merge2
        continue-on-error: true
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
          pull-request-number: ${{ steps.pr_id.outputs.pull-request-number }}
          merge-method: merge
      - name: Retry 2 - sleep
        if: steps.merge2.outcome == 'failure'
        id: sleep2
        run: sleep 120
      - name: Pull Request Automerge 3
        if: steps.sleep2.outcome == 'success'
        id: merge3
        continue-on-error: true
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
          pull-request-number: ${{ steps.pr_id.outputs.pull-request-number }}
          merge-method: merge
      - name: Retry 3 - sleep
        if: steps.merge3.outcome == 'failure'
        id: sleep3
        run: sleep 240
      - name: Pull Request Automerge 4
        if: steps.sleep3.outcome == 'success'
        id: merge4
        continue-on-error: true
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
          pull-request-number: ${{ steps.pr_id.outputs.pull-request-number }}
          merge-method: merge
      - name: Try Delete
        if: always()
        run: git push origin -d update_latest/${{ matrix.alpha }} || echo 'do nothing'
  update_release_time:
    name: Do Release Time Table ETL
    needs: update_latest_json
    runs-on: ubuntu-latest
    steps:
      - name: checkout 
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: 'main'
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-known-hosts: github.com
      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install package
        run: |
          pip install tqdm
          pip install pandas==1.4.2
          pip install cryptography
          pip install pyarrow==8.0.0
      - name: Insert Key
        run: |
          echo ${{ secrets.FILEKEY }} >> filekey.key
      - name: RUN ETL
        run: |
          python update_release_time.py
      - name: Git commit
        run: |
          git config --global user.name "jeffrey82221"
          git config --global user.email "jeffrey82221@gmail.com"
          git add data/release_time
          git diff-index --quiet HEAD || git commit -m 'update: release time table'
      - name: Git pull
        run: |
          git config --global user.email "jeffrey82221@gmail.com"
          git config --global user.name "jeffrey82221"
          git config --global http.postBuffer 1048576000
          git config pull.rebase false
          git pull origin main || echo 'pull failed'
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PERSONAL_TOKEN }}
          branch: main     
